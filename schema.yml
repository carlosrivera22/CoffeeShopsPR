openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/coffee_shops/:
    get:
      operationId: listCoffeeShops
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoffeeShop'
          description: ''
      tags:
      - api
    post:
      operationId: createCoffeeShop
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoffeeShop'
          description: ''
      tags:
      - api
  /api/coffee_shops/{id}/:
    get:
      operationId: listCoffeeShops
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this coffee shop.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoffeeShop'
          description: ''
      tags:
      - api
    post:
      operationId: createCoffeeShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this coffee shop.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoffeeShop'
          description: ''
      tags:
      - api
    put:
      operationId: updateCoffeeShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this coffee shop.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoffeeShop'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCoffeeShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this coffee shop.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoffeeShop'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCoffeeShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this coffee shop.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/coffee_shops/{id}/{id}/:
    get:
      operationId: retrieveCoffeeShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this coffee shop.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoffeeShop'
          description: ''
      tags:
      - api
    put:
      operationId: updateCoffeeShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this coffee shop.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoffeeShop'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCoffeeShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this coffee shop.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoffeeShop'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoffeeShop'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCoffeeShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this coffee shop.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/newsletter/:
    get:
      operationId: listNewsletters
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Newsletter'
          description: ''
      tags:
      - api
    post:
      operationId: createNewsletter
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Newsletter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Newsletter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Newsletter'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Newsletter'
          description: ''
      tags:
      - api
  /api/newsletter/{id}/:
    get:
      operationId: retrieveNewsletter
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this newsletter.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Newsletter'
          description: ''
      tags:
      - api
    put:
      operationId: updateNewsletter
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this newsletter.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Newsletter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Newsletter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Newsletter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Newsletter'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateNewsletter
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this newsletter.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Newsletter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Newsletter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Newsletter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Newsletter'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyNewsletter
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this newsletter.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/books/:
    get:
      operationId: listBooks
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    post:
      operationId: createBook
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
  /api/books/{id}/:
    get:
      operationId: listBooks
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    post:
      operationId: createBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    put:
      operationId: updateBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/books/{id}/{id}/:
    get:
      operationId: retrieveBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    put:
      operationId: updateBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/coffee_shop/{id}/books/:
    get:
      operationId: listBooks
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    post:
      operationId: createBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
  /api/coffee_shop/{id}/books/{id}/:
    get:
      operationId: retrieveBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    put:
      operationId: updateBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBook
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this book.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    CoffeeShop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 360
        image:
          type: string
          format: binary
          nullable: true
        facebook:
          type: string
          nullable: true
          maxLength: 200
        address:
          type: string
          nullable: true
          maxLength: 200
        latitude:
          type: number
          nullable: true
        longitude:
          type: number
          nullable: true
        region:
          type: string
          nullable: true
          maxLength: 200
      required:
      - name
      - description
    Newsletter:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 200
            description:
              type: string
              maxLength: 360
            image:
              type: string
              format: binary
              nullable: true
            facebook:
              type: string
              nullable: true
              maxLength: 200
            address:
              type: string
              nullable: true
              maxLength: 200
            latitude:
              type: number
              nullable: true
            longitude:
              type: number
              nullable: true
            region:
              type: string
              nullable: true
              maxLength: 200
          required:
          - name
          - description
          readOnly: true
        shop_id:
          type: integer
          writeOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 360
        image:
          type: string
          format: binary
        author:
          type: string
          maxLength: 200
        genre:
          type: string
          maxLength: 200
      required:
      - shop_id
      - title
      - description
      - image
      - author
      - genre
